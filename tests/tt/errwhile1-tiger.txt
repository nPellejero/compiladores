LABEL FOR _tigermain: _tigermain
ADDED _tigermain
Todos los frags:
_tigermain:
LABEL L13
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 CONST 10)
LABEL L10
CJUMP(GT,
 TEMP T0,
 CONST 10,
 L11,L0)
LABEL L0
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L12)
LABEL L11
CJUMP(LT,
 TEMP T0,
 CONST 5,
 L1,L2)
LABEL L2
MOVE(
 TEMP T0,
 BINOP(MINUS,
  TEMP T0,
  CONST 1))
LABEL L8
JUMP( NAME L0)
LABEL L1
JUMP( NAME L0)
LABEL L14
MOVE(
 TEMP T1,
 CONST 1)
CJUMP(GT,
 TEMP T0,
 CONST 10,
 L3,L4)
LABEL L4
MOVE(
 TEMP T1,
 CONST 0)
LABEL L3
CJUMP(NE,
 TEMP T1,
 CONST 0,
 L9,L5)
LABEL L5
JUMP( NAME L10)
LABEL L9
CJUMP(LT,
 TEMP T0,
 CONST 5,
 L6,L7)
LABEL L7
MOVE(
 TEMP T0,
 BINOP(MINUS,
  TEMP T0,
  CONST 1))
JUMP( NAME L8)
LABEL L6
JUMP( NAME L5)
LABEL L12
----------------
ADDING (_tigermain,)
Leng frame: 2
_tigermain: 
L13: 
movq ARG1, -8(FP)
movq $10, T0 
L10: 
movq $10, T2 
cmp T2, T0 
jg L11 
L0: 
movq $0, RV 
jmp L12 
L11: 
movq $5, T3 
cmp T3, T0 
jl L1 
L2: 
movq T0, T4
movq $1, T5 
sub T5, T4
movq T4, T0 
L8: 
jmp L0 
L1: 
jmp L0 
L14: 
movq $1, T1 
movq $10, T6 
cmp T6, T0 
jg L3 
L4: 
movq $0, T1 
L3: 
movq $-0, T7 
cmp T7, T1 
jne L9 
L5: 
jmp L10 
L9: 
movq $5, T8 
cmp T8, T0 
jl L6 
L7: 
movq T0, T9
movq $1, T10 
sub T10, T9
movq T9, T0 
jmp L8 
L6: 
jmp L5 
L12: 
47::f433
1
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T2
poniendo noddes: SP, T2
poniendo noddes: T0, T2
poniendo noddes: FP, RV
poniendo noddes: SP, RV
poniendo noddes: FP, T3
poniendo noddes: SP, T3
poniendo noddes: T0, T3
poniendo noddes: FP, T4
poniendo noddes: SP, T4
poniendo noddes: FP, T5
poniendo noddes: SP, T5
poniendo noddes: T4, T5
poniendo noddes: FP, T1
poniendo noddes: SP, T1
poniendo noddes: T0, T1
poniendo noddes: FP, T6
poniendo noddes: SP, T6
poniendo noddes: T0, T6
poniendo noddes: T1, T6
poniendo noddes: FP, T7
poniendo noddes: SP, T7
poniendo noddes: T0, T7
poniendo noddes: T1, T7
poniendo noddes: FP, T8
poniendo noddes: SP, T8
poniendo noddes: T0, T8
poniendo noddes: FP, T9
poniendo noddes: SP, T9
poniendo noddes: FP, T10
poniendo noddes: SP, T10
poniendo noddes: T9, T10

 esto es: initial
 {T0 ,T1 ,T10 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,T9 ,}
nodeMoves: T1 -> Move que no esta realacionado con otro temporario
nodeMoves: T10 -> Move que no esta realacionado con otro temporario
nodeMoves: T2 -> Move que no esta realacionado con otro temporario
nodeMoves: T3 -> Move que no esta realacionado con otro temporario
nodeMoves: T5 -> Move que no esta realacionado con otro temporario
nodeMoves: T6 -> Move que no esta realacionado con otro temporario
nodeMoves: T7 -> Move que no esta realacionado con otro temporario
nodeMoves: T8 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> 
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T3 -> 
Nodo: T4 -> 
Nodo: T5 -> 
Nodo: T6 -> 
Nodo: T7 -> 
Nodo: T8 -> 
Nodo: R10 -> Color: 2
Nodo: T9 -> 
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: T10 -> Valor: 3
Nodo: T0 -> Valor: 8
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 5
Nodo: T2 -> Valor: 3
Nodo: T3 -> Valor: 3
Nodo: T4 -> Valor: 3
Nodo: T5 -> Valor: 3
Nodo: T6 -> Valor: 4
Nodo: T7 -> Valor: 4
Nodo: T8 -> Valor: 3
Nodo: T9 -> Valor: 3
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T0,T9
MOVE: T9,T0
MOVE: T0,T4
MOVE: T4,T0
MOVE: T0,T4
MOVE: T4,T0
MOVE: T0,T9
MOVE: T9,T0
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T1 ,T10 ,T2 ,T3 ,T5 ,T6 ,T7 ,T8 ,}

 esto es: freezeWorklist
 {T0 ,T4 ,T9 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T10 -> vecinos: FPvecinos: SPvecinos: T9
Nodo: T0 -> vecinos: FPvecinos: SPvecinos: T1vecinos: T2vecinos: T3vecinos: T6vecinos: T7vecinos: T8
Nodo: T1 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T6vecinos: T7
Nodo: T2 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T3 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T4 -> vecinos: FPvecinos: SPvecinos: T5
Nodo: T5 -> vecinos: FPvecinos: SPvecinos: T4
Nodo: T6 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T1
Nodo: T7 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T1
Nodo: T8 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T9 -> vecinos: FPvecinos: SPvecinos: T10
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: T0,T9
MOVE: T9,T0
MOVE: T0,T4
MOVE: T4,T0
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist T0
addWorklist T0
app1
addWorklist T0
addWorklist T0
AssignColorsT0

 esto es: lista adj
 {FP ,SP ,T1 ,T2 ,T3 ,T6 ,T7 ,T8 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T1
getAlias de: T2
getAlias de: T3
getAlias de: T6
getAlias de: T7
getAlias de: T8
inserto en color: T0
AssignColorsT0

 esto es: lista adj
 {FP ,SP ,T1 ,T2 ,T3 ,T6 ,T7 ,T8 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T1
getAlias de: T2
getAlias de: T3
getAlias de: T6
getAlias de: T7
getAlias de: T8
inserto en color: T0
AssignColorsT8

 esto es: lista adj
 {FP ,SP ,T0 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
inserto en color: T8
AssignColorsT7

 esto es: lista adj
 {FP ,SP ,T0 ,T1 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T1
inserto en color: T7
AssignColorsT6

 esto es: lista adj
 {FP ,SP ,T0 ,T1 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T1
inserto en color: T6
AssignColorsT5

 esto es: lista adj
 {FP ,SP ,T4 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T4
inserto en color: T5
AssignColorsT3

 esto es: lista adj
 {FP ,SP ,T0 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
inserto en color: T3
AssignColorsT2

 esto es: lista adj
 {FP ,SP ,T0 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
inserto en color: T2
AssignColorsT10

 esto es: lista adj
 {FP ,SP ,T9 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T9
inserto en color: T10
AssignColorsT1

 esto es: lista adj
 {FP ,SP ,T0 ,T6 ,T7 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T6
getAlias de: T7
inserto en color: T1
getAlias de T4 es T0
getAlias de T9 es T0

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 2
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 0
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 2
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 0
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T4 es T0
getAlias de T9 es T0

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 2
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 0
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 50
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T9 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T9 -> %rax
TEMP -> REG: T4 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T4 -> %rax
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T0 -> %rax
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: T5 -> %rbx
TEMP -> REG: T5 -> %rbx
TEMP -> REG: T4 -> %rax
TEMP -> REG: T1 -> %r10
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: T1 -> %r10
TEMP -> REG: T7 -> %rbx
TEMP -> REG: T7 -> %rbx
TEMP -> REG: T1 -> %r10
TEMP -> REG: T8 -> %rbx
TEMP -> REG: T8 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: T10 -> %rbx
TEMP -> REG: T10 -> %rbx
TEMP -> REG: T9 -> %rax
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L13
L13: 
movq %rdi, -8(%rbp)
movq $10, %rax 
L10: 
movq $10, %rbx 
cmp %rbx, %rax 
jg L11 
L0: 
movq $0, %rax 
jmp L12 
L11: 
movq $5, %rbx 
cmp %rbx, %rax 
jl L1 
L2: 
movq $1, %rbx 
sub %rbx, %rax
L8: 
jmp L0 
L1: 
jmp L0 
L14: 
movq $1, %r10 
movq $10, %rbx 
cmp %rbx, %rax 
jg L3 
L4: 
movq $0, %r10 
L3: 
movq $-0, %rbx 
cmp %rbx, %r10 
jne L9 
L5: 
jmp L10 
L9: 
movq $5, %rbx 
cmp %rbx, %rax 
jl L6 
L7: 
movq $1, %rbx 
sub %rbx, %rax
jmp L8 
L6: 
jmp L5 
L12: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
