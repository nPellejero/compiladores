LABEL FOR _tigermain: _tigermain
ActualArg: 1
ActualLocal: 0
RET: 24
LABEL FOR f: L0
ADDED L0
ADDED _tigermain
Todos los frags:
L0:
LABEL L2
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 MEM(
  BINOP(PLUS,
   MEM(
    BINOP(PLUS,
     TEMP FP,
     CONST ~8)),
   CONST ~24)),
 BINOP(PLUS,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      TEMP FP,
      CONST ~8)),
    CONST ~24)),
  CONST 1))
JUMP( NAME L1)
LABEL L1
_tigermain:
LABEL L4
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~24)),
 CONST 10)
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L3)
LABEL L3
----------------
ADDING (L0,)
ADDING (_tigermain,)
Leng frame: 4
L0: 
L2: 
movq ARG1, -8(FP)
movq -8(FP), T0
movq -8(FP), T3
movq -24(T3), T2
movq T2, T1
movq $1, T4 
addq T4, T1
movq T1, -24(T0)
jmp L1 
L1: 
_tigermain: 
L4: 
movq ARG1, -8(FP)
movq $10, T5 
movq T5, -24(FP)
movq $0, RV 
jmp L3 
L3: 
10::f433
3
poniendo noddes: SP, FP
poniendo noddes: FP, T5
poniendo noddes: SP, T5
poniendo noddes: FP, RV
poniendo noddes: SP, RV

 esto es: initial
 {T5 ,}
nodeMoves: T5 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T5 -> 
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: RV -> Valor: 1000
Nodo: T5 -> Valor: 2
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T5 ,}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T5 -> vecinos: FPvecinos: SP
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
AssignColorsT5

 esto es: lista adj
 {FP ,SP ,}
getAlias de: FP
getAlias de: SP
inserto en color: T5

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
2
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 13
14::f433
1
poniendo noddes: RV, FP
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: RV, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T3
poniendo noddes: RV, T3
poniendo noddes: SP, T3
poniendo noddes: T0, T3
poniendo noddes: FP, T2
poniendo noddes: RV, T2
poniendo noddes: SP, T2
poniendo noddes: T0, T2
poniendo noddes: FP, T1
poniendo noddes: RV, T1
poniendo noddes: SP, T1
poniendo noddes: T0, T1
poniendo noddes: FP, T4
poniendo noddes: RV, T4
poniendo noddes: SP, T4
poniendo noddes: T0, T4
poniendo noddes: T1, T4

 esto es: initial
 {T0 ,T1 ,T2 ,T3 ,T4 ,}
nodeMoves: T0 -> Move que no esta realacionado con otro temporario
nodeMoves: T3 -> Move que no esta realacionado con otro temporario
nodeMoves: T4 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T3 -> 
Nodo: T4 -> 
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: RV -> Valor: 1000
Nodo: T0 -> Valor: 7
Nodo: T1 -> Valor: 5
Nodo: T2 -> Valor: 4
Nodo: T3 -> Valor: 4
Nodo: T4 -> Valor: 5
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T1,T2
MOVE: T1,T2
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T0 ,T3 ,T4 ,}

 esto es: freezeWorklist
 {T1 ,T2 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T0 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T1vecinos: T2vecinos: T3vecinos: T4
Nodo: T1 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T0vecinos: T4
Nodo: T2 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T0
Nodo: T3 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T0
Nodo: T4 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T0vecinos: T1
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: T1,T2
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist T1
AssignColorsT1

 esto es: lista adj
 {FP ,RV ,SP ,T0 ,T4 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T0
getAlias de: T4
inserto en color: T1
AssignColorsT4

 esto es: lista adj
 {FP ,RV ,SP ,T0 ,T1 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T0
getAlias de: T1
inserto en color: T4
AssignColorsT3

 esto es: lista adj
 {FP ,RV ,SP ,T0 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T0
inserto en color: T3
AssignColorsT0

 esto es: lista adj
 {FP ,RV ,SP ,T1 ,T2 ,T3 ,T4 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T1
getAlias de: T2
getAlias de: T3
getAlias de: T4
inserto en color: T0
getAlias de T2 es T1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 3
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 2
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 17
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 3
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 2
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T2 es T1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 3
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 2
Nodo: T5 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 34
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T1 -> %rbx
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T0 -> %r11
TEMP -> REG: FP -> %rbp
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T4 -> %r10
TEMP -> REG: T4 -> %r10
TEMP -> REG: T1 -> %rbx
TEMP -> REG: T1 -> %rbx
TEMP -> REG: T0 -> %r11
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T5 -> %rax
TEMP -> REG: T5 -> %rax
TEMP -> REG: FP -> %rbp
TEMP -> REG: RV -> %rax
.globl L0
.type L0, @function
L0: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L2
L2: 
movq %rdi, -8(%rbp)
movq -8(%rbp), %r11
movq -8(%rbp), %rbx
movq -24(%rbx), %rbx
movq $1, %r10 
addq %r10, %rbx
movq %rbx, -24(%r11)
jmp L1 
L1: 
leave
ret
.size L0, .-L0
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L4
L4: 
movq %rdi, -8(%rbp)
movq $10, %rax 
movq %rax, -24(%rbp)
movq $0, %rax 
jmp L3 
L3: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
