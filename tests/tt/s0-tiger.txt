LABEL FOR _tigermain: _tigermain
ADDED _tigermain
Todos los frags:
.L0:	.quad 4
	.string "hola"
	.text
.L1:	.quad 4
	.string "chau"
	.text
.L2:	.quad 1
	.string "a"
	.text
.L3:	.quad 1
	.string "b"
	.text
_tigermain:
LABEL L8
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 NAME .L0)
MOVE(
 TEMP T1,
 NAME .L1)
MOVE(
 TEMP T2,
 CALL(
  NAME _stringCompare,
   TEMP T0,
   TEMP T1))
CJUMP(GT,
 TEMP T2,
 CONST 0,
 L4,L5)
LABEL L5
EXP(
 CALL(
  NAME print,
   NAME .L3))
LABEL L6
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L7)
LABEL L4
EXP(
 CALL(
  NAME print,
   NAME .L2))
JUMP( NAME L6)
LABEL L7
----------------
ADDING (.L0,.quad 4
	.string "hola"
	.text)
ADDING (.L1,.quad 4
	.string "chau"
	.text)
ADDING (.L2,.quad 1
	.string "a"
	.text)
ADDING (.L3,.quad 1
	.string "b"
	.text)
ADDING (_tigermain,)
Leng frame: 6
.L0:
	.quad 4
	.string "hola"
	.text
.L1:
	.quad 4
	.string "chau"
	.text
.L2:
	.quad 1
	.string "a"
	.text
.L3:
	.quad 1
	.string "b"
	.text
_tigermain: 
L8: 
movq ARG1, -8(FP)
movq $.L0, T4
movq T4, T0 
movq $.L1, T5
movq T5, T1 
movq T1, ARG2
movq T0, ARG1
call _stringCompare
movq RV, T2 
movq $-0, T6 
cmp T6, T2 
jg L4 
L5: 
movq $.L3, T7
movq T7, ARG1
call print
L6: 
movq $0, RV 
jmp L7 
L4: 
movq $.L2, T8
movq T8, ARG1
call print
jmp L6 
L7: 
28::f433
5
poniendo noddes: T0, T5
poniendo noddes: T0, T1
poniendo noddes: T0, ARG2
poniendo noddes: ARG2, ARG1
poniendo noddes: ARG1, ARG3
poniendo noddes: ARG1, ARG4
poniendo noddes: ARG1, ARG5
poniendo noddes: ARG1, ARG6
poniendo noddes: ARG1, FP
poniendo noddes: ARG1, R10
poniendo noddes: ARG1, R11
poniendo noddes: ARG1, R12
poniendo noddes: ARG1, R13
poniendo noddes: ARG1, R14
poniendo noddes: ARG1, R15
poniendo noddes: ARG1, RAX
poniendo noddes: ARG1, RBX
poniendo noddes: ARG1, RDX
poniendo noddes: ARG1, RV
poniendo noddes: ARG1, SP
poniendo noddes: ARG2, ARG3
poniendo noddes: ARG2, ARG4
poniendo noddes: ARG2, ARG5
poniendo noddes: ARG2, ARG6
poniendo noddes: ARG2, FP
poniendo noddes: ARG2, R10
poniendo noddes: ARG2, R11
poniendo noddes: ARG2, R12
poniendo noddes: ARG2, R13
poniendo noddes: ARG2, R14
poniendo noddes: ARG2, R15
poniendo noddes: ARG2, RAX
poniendo noddes: ARG2, RBX
poniendo noddes: ARG2, RDX
poniendo noddes: ARG2, RV
poniendo noddes: ARG2, SP
poniendo noddes: ARG3, ARG4
poniendo noddes: ARG3, ARG5
poniendo noddes: ARG3, ARG6
poniendo noddes: ARG3, FP
poniendo noddes: ARG3, R10
poniendo noddes: ARG3, R11
poniendo noddes: ARG3, R12
poniendo noddes: ARG3, R13
poniendo noddes: ARG3, R14
poniendo noddes: ARG3, R15
poniendo noddes: ARG3, RAX
poniendo noddes: ARG3, RBX
poniendo noddes: ARG3, RDX
poniendo noddes: ARG3, RV
poniendo noddes: ARG3, SP
poniendo noddes: ARG4, ARG5
poniendo noddes: ARG4, ARG6
poniendo noddes: ARG4, FP
poniendo noddes: ARG4, R10
poniendo noddes: ARG4, R11
poniendo noddes: ARG4, R12
poniendo noddes: ARG4, R13
poniendo noddes: ARG4, R14
poniendo noddes: ARG4, R15
poniendo noddes: ARG4, RAX
poniendo noddes: ARG4, RBX
poniendo noddes: ARG4, RDX
poniendo noddes: ARG4, RV
poniendo noddes: ARG4, SP
poniendo noddes: ARG5, ARG6
poniendo noddes: ARG5, FP
poniendo noddes: ARG5, R10
poniendo noddes: ARG5, R11
poniendo noddes: ARG5, R12
poniendo noddes: ARG5, R13
poniendo noddes: ARG5, R14
poniendo noddes: ARG5, R15
poniendo noddes: ARG5, RAX
poniendo noddes: ARG5, RBX
poniendo noddes: ARG5, RDX
poniendo noddes: ARG5, RV
poniendo noddes: ARG5, SP
poniendo noddes: ARG6, FP
poniendo noddes: ARG6, R10
poniendo noddes: ARG6, R11
poniendo noddes: ARG6, R12
poniendo noddes: ARG6, R13
poniendo noddes: ARG6, R14
poniendo noddes: ARG6, R15
poniendo noddes: ARG6, RAX
poniendo noddes: ARG6, RBX
poniendo noddes: ARG6, RDX
poniendo noddes: ARG6, RV
poniendo noddes: ARG6, SP
poniendo noddes: FP, R10
poniendo noddes: FP, R11
poniendo noddes: FP, R12
poniendo noddes: FP, R13
poniendo noddes: FP, R14
poniendo noddes: FP, R15
poniendo noddes: FP, RAX
poniendo noddes: FP, RBX
poniendo noddes: FP, RDX
poniendo noddes: FP, RV
poniendo noddes: FP, SP
poniendo noddes: R10, R11
poniendo noddes: R10, R12
poniendo noddes: R10, R13
poniendo noddes: R10, R14
poniendo noddes: R10, R15
poniendo noddes: R10, RAX
poniendo noddes: R10, RBX
poniendo noddes: R10, RDX
poniendo noddes: R10, RV
poniendo noddes: R10, SP
poniendo noddes: R11, R12
poniendo noddes: R11, R13
poniendo noddes: R11, R14
poniendo noddes: R11, R15
poniendo noddes: R11, RAX
poniendo noddes: R11, RBX
poniendo noddes: R11, RDX
poniendo noddes: R11, RV
poniendo noddes: R11, SP
poniendo noddes: R12, R13
poniendo noddes: R12, R14
poniendo noddes: R12, R15
poniendo noddes: R12, RAX
poniendo noddes: R12, RBX
poniendo noddes: R12, RDX
poniendo noddes: R12, RV
poniendo noddes: R12, SP
poniendo noddes: R13, R14
poniendo noddes: R13, R15
poniendo noddes: R13, RAX
poniendo noddes: R13, RBX
poniendo noddes: R13, RDX
poniendo noddes: R13, RV
poniendo noddes: R13, SP
poniendo noddes: R14, R15
poniendo noddes: R14, RAX
poniendo noddes: R14, RBX
poniendo noddes: R14, RDX
poniendo noddes: R14, RV
poniendo noddes: R14, SP
poniendo noddes: R15, RAX
poniendo noddes: R15, RBX
poniendo noddes: R15, RDX
poniendo noddes: R15, RV
poniendo noddes: R15, SP
poniendo noddes: RAX, RBX
poniendo noddes: RAX, RDX
poniendo noddes: RAX, RV
poniendo noddes: RAX, SP
poniendo noddes: RBX, RDX
poniendo noddes: RBX, RV
poniendo noddes: RBX, SP
poniendo noddes: RDX, RV
poniendo noddes: RDX, SP
poniendo noddes: RV, SP
poniendo noddes: T2, T6

 esto es: initial
 {T0 ,T1 ,T2 ,T4 ,T5 ,T6 ,T7 ,T8 ,}
nodeMoves: T6 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T4 -> 
Nodo: T5 -> 
Nodo: T6 -> 
Nodo: T7 -> 
Nodo: T8 -> 
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: RDX -> Valor: 1000
Nodo: ARG1 -> Valor: 1000
Nodo: ARG2 -> Valor: 1000
Nodo: ARG3 -> Valor: 1000
Nodo: ARG4 -> Valor: 1000
Nodo: ARG5 -> Valor: 1000
Nodo: ARG6 -> Valor: 1000
Nodo: RAX -> Valor: 1000
Nodo: RBX -> Valor: 1000
Nodo: T0 -> Valor: 3
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 1
Nodo: T2 -> Valor: 1
Nodo: T4 -> Valor: 0
Nodo: T5 -> Valor: 1
Nodo: T6 -> Valor: 1
Nodo: T7 -> Valor: 0
Nodo: T8 -> Valor: 0
Nodo: R10 -> Valor: 1000
Nodo: R11 -> Valor: 1000
Nodo: R12 -> Valor: 1000
Nodo: R13 -> Valor: 1000
Nodo: R14 -> Valor: 1000
Nodo: SP -> Valor: 1000
Nodo: R15 -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: ARG1,T8
MOVE: ARG1,T7
MOVE: ARG1,T0
MOVE: ARG2,T1
MOVE: T2,RV
MOVE: ARG1,T0
MOVE: T0,T4
MOVE: ARG2,T1
MOVE: T1,T5
MOVE: T2,RV
MOVE: T0,T4
MOVE: T1,T5
MOVE: ARG1,T7
MOVE: ARG1,T8
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T6 ,}

 esto es: freezeWorklist
 {T0 ,T1 ,T2 ,T4 ,T5 ,T7 ,T8 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: ARG1 -> 
Nodo: ARG2 -> 
Nodo: T0 -> vecinos: ARG2vecinos: T1vecinos: T5
Nodo: T1 -> vecinos: T0
Nodo: T2 -> vecinos: T6
Nodo: T4 -> 
Nodo: T5 -> vecinos: T0
Nodo: T6 -> vecinos: T2
Nodo: T7 -> 
Nodo: T8 -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: ARG1,T8
MOVE: ARG1,T7
MOVE: T2,RV
MOVE: ARG1,T0
MOVE: ARG2,T1
MOVE: T1,T5
MOVE: T0,T4
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist ARG1
app1
addWorklist ARG1
app1
addWorklist RV
poniendo noddes: T1, ARG1
poniendo noddes: T5, ARG1
app1
addWorklist ARG1
app1
addWorklist ARG2
app1
addWorklist ARG2
app1
addWorklist ARG1
AssignColorsT6

 esto es: lista adj
 {T2 ,}
getAlias de: T2
inserto en color: T6
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
4
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 31
3::f433
3
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 35
3::f433
2
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 39
3::f433
1
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 43
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG1
getAlias de T1 es ARG2
getAlias de T2 es RV
getAlias de T4 es ARG1
getAlias de T5 es ARG2
getAlias de T7 es ARG1
getAlias de T8 es ARG1

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 8
Nodo: T1 -> Color: 9
Nodo: T2 -> Color: 0
Nodo: T4 -> Color: 8
Nodo: T5 -> Color: 9
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 8
Nodo: T8 -> Color: 8
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 47
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T8 -> %rdi
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: T7 -> %rdi
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: RV -> %rax
TEMP -> REG: T2 -> %rax
TEMP -> REG: T0 -> %rdi
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: T1 -> %rsi
TEMP -> REG: ARG2 -> %rsi
TEMP -> REG: T5 -> %rsi
TEMP -> REG: T1 -> %rsi
TEMP -> REG: T4 -> %rdi
TEMP -> REG: T0 -> %rdi
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T4 -> %rdi
TEMP -> REG: T5 -> %rsi
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T2 -> %rax
TEMP -> REG: T7 -> %rdi
TEMP -> REG: RV -> %rax
TEMP -> REG: T8 -> %rdi
.section  .rodata
.L0:
	.quad 4
	.string "hola"
	.text
.section  .rodata
.L1:
	.quad 4
	.string "chau"
	.text
.section  .rodata
.L2:
	.quad 1
	.string "a"
	.text
.section  .rodata
.L3:
	.quad 1
	.string "b"
	.text
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L8
L8: 
movq %rdi, -8(%rbp)
movq $.L0, %rdi
movq $.L1, %rsi
call _stringCompare
movq $-0, %rbx 
cmp %rbx, %rax 
jg L4 
L5: 
movq $.L3, %rdi
call print
L6: 
movq $0, %rax 
jmp L7 
L4: 
movq $.L2, %rdi
call print
jmp L6 
L7: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
