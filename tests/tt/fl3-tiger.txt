LABEL FOR _tigermain: _tigermain
ADDED _tigermain
Todos los frags:
_tigermain:
LABEL L4
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 CONST 0)
MOVE(
 TEMP T1,
 CONST 0)
MOVE(
 TEMP T2,
 CONST 0)
LABEL L1
CJUMP(LT,
 TEMP T0,
 CONST 100,
 L2,L0)
LABEL L0
EXP(
 TEMP T2)
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L3)
LABEL L2
MOVE(
 TEMP T1,
 BINOP(PLUS,
  TEMP T0,
  CONST 1))
MOVE(
 TEMP T2,
 BINOP(PLUS,
  TEMP T2,
  TEMP T1))
MOVE(
 TEMP T0,
 BINOP(MUL,
  TEMP T1,
  CONST 2))
JUMP( NAME L1)
LABEL L3
----------------
ADDING (_tigermain,)
Leng frame: 2
_tigermain: 
L4: 
movq ARG1, -8(FP)
movq $0, T0 
movq $0, T1 
movq $0, T2 
L1: 
movq $100, T3 
cmp T3, T0 
jl L2 
L0: 
movq $0, RV 
jmp L3 
L2: 
movq T0, T4
movq $1, T5 
addq T5, T4
movq T4, T1 
movq T2, T6
addq T1, T6
movq T6, T2 
movq T1, RV
movq $2, T8 
mul T8 
movq RV, T7
movq T7, T0 
jmp L1 
L3: 
29::f433
1
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T1
poniendo noddes: SP, T1
poniendo noddes: T0, T1
poniendo noddes: FP, T2
poniendo noddes: SP, T2
poniendo noddes: T0, T2
poniendo noddes: FP, T3
poniendo noddes: SP, T3
poniendo noddes: T0, T3
poniendo noddes: T2, T3
poniendo noddes: FP, RV
poniendo noddes: SP, RV
poniendo noddes: FP, T4
poniendo noddes: SP, T4
poniendo noddes: T2, T4
poniendo noddes: FP, T5
poniendo noddes: SP, T5
poniendo noddes: T2, T5
poniendo noddes: T4, T5
poniendo noddes: T2, T1
poniendo noddes: FP, T6
poniendo noddes: SP, T6
poniendo noddes: T1, T6
poniendo noddes: T2, RV
poniendo noddes: FP, T8
poniendo noddes: RV, T8
poniendo noddes: SP, T8
poniendo noddes: T2, T8
poniendo noddes: FP, T7
poniendo noddes: SP, T7
poniendo noddes: T2, T7

 esto es: initial
 {T0 ,T1 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,}
nodeMoves: T3 -> Move que no esta realacionado con otro temporario
nodeMoves: T5 -> Move que no esta realacionado con otro temporario
nodeMoves: T8 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T3 -> 
Nodo: T4 -> 
Nodo: T5 -> 
Nodo: T6 -> 
Nodo: T7 -> 
Nodo: T8 -> 
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: T0 -> Valor: 5
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 5
Nodo: T2 -> Valor: 10
Nodo: T3 -> Valor: 4
Nodo: T4 -> Valor: 4
Nodo: T5 -> Valor: 4
Nodo: T6 -> Valor: 3
Nodo: T7 -> Valor: 3
Nodo: T8 -> Valor: 4
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T7,RV
MOVE: RV,T1
MOVE: T0,T7
MOVE: T4,T0
MOVE: RV,T1
MOVE: T1,T4
MOVE: T2,T6
MOVE: T6,T2
MOVE: T1,T4
MOVE: T4,T0
MOVE: T2,T6
MOVE: T6,T2
MOVE: T0,T7
MOVE: T7,RV
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T3 ,T5 ,T8 ,}

 esto es: freezeWorklist
 {T0 ,T1 ,T2 ,T4 ,T6 ,T7 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T0 -> vecinos: FPvecinos: SPvecinos: T1vecinos: T2vecinos: T3
Nodo: T1 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T2vecinos: T6
Nodo: T2 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T0vecinos: T1vecinos: T3vecinos: T4vecinos: T5vecinos: T7vecinos: T8
Nodo: T3 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T2
Nodo: T4 -> vecinos: FPvecinos: SPvecinos: T2vecinos: T5
Nodo: T5 -> vecinos: FPvecinos: SPvecinos: T2vecinos: T4
Nodo: T6 -> vecinos: FPvecinos: SPvecinos: T1
Nodo: T7 -> vecinos: FPvecinos: SPvecinos: T2
Nodo: T8 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T2
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: T0,T7
MOVE: T7,RV
MOVE: RV,T1
MOVE: T2,T6
MOVE: T6,T2
MOVE: T1,T4
MOVE: T4,T0
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist T0
poniendo noddes: T1, RV
app1
addWorklist RV
addWorklist RV
addWorklist T1
app1
addWorklist T2
addWorklist T2
app1
addWorklist T1
addWorklist RV
addWorklist T1
AssignColorsT1

 esto es: lista adj
 {FP ,RV ,SP ,T0 ,T2 ,T6 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T0
getAlias de: T2
getAlias de: T6
inserto en color: T1
AssignColorsT2

 esto es: lista adj
 {FP ,RV ,SP ,T0 ,T1 ,T3 ,T4 ,T5 ,T7 ,T8 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T0
getAlias de: T1
getAlias de: T3
getAlias de: T4
getAlias de: T5
getAlias de: T7
getAlias de: T8
inserto en color: T2
AssignColorsT8

 esto es: lista adj
 {FP ,RV ,SP ,T2 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T2
inserto en color: T8
AssignColorsT5

 esto es: lista adj
 {FP ,SP ,T2 ,T4 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T2
getAlias de: T4
inserto en color: T5
AssignColorsT3

 esto es: lista adj
 {FP ,SP ,T0 ,T2 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T2
inserto en color: T3
getAlias de T0 es RV
getAlias de T4 es T1
getAlias de T6 es T2
getAlias de T7 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 2
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 2
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 2
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 2
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es RV
getAlias de T4 es T1
getAlias de T6 es T2
getAlias de T7 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 1
Nodo: T2 -> Color: 2
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 2
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 32
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T7 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T7 -> %rax
TEMP -> REG: T1 -> %rbx
TEMP -> REG: RV -> %rax
TEMP -> REG: T6 -> %r10
TEMP -> REG: T2 -> %r10
TEMP -> REG: T2 -> %r10
TEMP -> REG: T6 -> %r10
TEMP -> REG: T4 -> %rbx
TEMP -> REG: T1 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: T4 -> %rbx
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T0 -> %rax
TEMP -> REG: T1 -> %rbx
TEMP -> REG: T2 -> %r10
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T0 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T4 -> %rbx
TEMP -> REG: T5 -> %rax
TEMP -> REG: T5 -> %rax
TEMP -> REG: T4 -> %rbx
TEMP -> REG: T1 -> %rbx
TEMP -> REG: T6 -> %r10
TEMP -> REG: T1 -> %rbx
TEMP -> REG: RV -> %rax
TEMP -> REG: T8 -> %rbx
TEMP -> REG: T8 -> %rbx
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L4
L4: 
movq %rdi, -8(%rbp)
movq $0, %rax 
movq $0, %rbx 
movq $0, %r10 
L1: 
movq $100, %rbx 
cmp %rbx, %rax 
jl L2 
L0: 
movq $0, %rax 
jmp L3 
L2: 
movq %rax, %rbx
movq $1, %rax 
addq %rax, %rbx
addq %rbx, %r10
movq %rbx, %rax
movq $2, %rbx 
mul %rbx 
jmp L1 
L3: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
