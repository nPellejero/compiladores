LABEL FOR _tigermain: _tigermain
ADDED _tigermain
Todos los frags:
_tigermain:
LABEL L1
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 CONST 0)
EXP(
 MEM(
  BINOP(PLUS,
   MEM(
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       TEMP T0,
       BINOP(MUL,
        CONST 0,
        CONST 8))),
     BINOP(MUL,
      CONST 0,
      CONST 8))),
   BINOP(MUL,
    CONST 0,
    CONST 8))))
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L0)
LABEL L0
----------------
ADDING (_tigermain,)
Leng frame: 2
_tigermain: 
L1: 
movq ARG1, -8(FP)
movq $0, T0 
movq T0, T6
movq $-0, T8 
movq T8, RV
movq $8, T9 
mul T9 
movq RV, T7
addq T7, T6
movq (T6), T5
movq T5, T4
movq $-0, T11 
movq T11, RV
movq $8, T12 
mul T12 
movq RV, T10
addq T10, T4
movq (T4), T3
movq T3, T2
movq $-0, T14 
movq T14, RV
movq $8, T15 
mul T15 
movq RV, T13
addq T13, T2
movq (T2), T1
movq $0, RV 
jmp L0 
L0: 
33::f433
1
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T6
poniendo noddes: SP, T6
poniendo noddes: FP, T8
poniendo noddes: SP, T8
poniendo noddes: T6, T8
poniendo noddes: FP, RV
poniendo noddes: SP, RV
poniendo noddes: T6, RV
poniendo noddes: FP, T9
poniendo noddes: RV, T9
poniendo noddes: SP, T9
poniendo noddes: T6, T9
poniendo noddes: FP, T7
poniendo noddes: SP, T7
poniendo noddes: T6, T7
poniendo noddes: FP, T5
poniendo noddes: SP, T5
poniendo noddes: FP, T4
poniendo noddes: SP, T4
poniendo noddes: FP, T11
poniendo noddes: SP, T11
poniendo noddes: T4, T11
poniendo noddes: T4, RV
poniendo noddes: FP, T12
poniendo noddes: RV, T12
poniendo noddes: SP, T12
poniendo noddes: T4, T12
poniendo noddes: FP, T10
poniendo noddes: SP, T10
poniendo noddes: T4, T10
poniendo noddes: FP, T3
poniendo noddes: SP, T3
poniendo noddes: FP, T2
poniendo noddes: SP, T2
poniendo noddes: FP, T14
poniendo noddes: SP, T14
poniendo noddes: T2, T14
poniendo noddes: T2, RV
poniendo noddes: FP, T15
poniendo noddes: RV, T15
poniendo noddes: SP, T15
poniendo noddes: T2, T15
poniendo noddes: FP, T13
poniendo noddes: SP, T13
poniendo noddes: T2, T13
poniendo noddes: FP, T1
poniendo noddes: SP, T1

 esto es: initial
 {T0 ,T1 ,T10 ,T11 ,T12 ,T13 ,T14 ,T15 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,T9 ,}
nodeMoves: T1 -> Move que no esta realacionado con otro temporario
nodeMoves: T12 -> Move que no esta realacionado con otro temporario
nodeMoves: T15 -> Move que no esta realacionado con otro temporario
nodeMoves: T9 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> 
Nodo: T11 -> 
Nodo: T12 -> 
Nodo: T13 -> 
Nodo: T14 -> 
Nodo: T15 -> 
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T3 -> 
Nodo: T4 -> 
Nodo: T5 -> 
Nodo: T6 -> 
Nodo: T7 -> 
Nodo: T8 -> 
Nodo: R10 -> Color: 2
Nodo: T9 -> 
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: T10 -> Valor: 3
Nodo: T11 -> Valor: 3
Nodo: T12 -> Valor: 4
Nodo: T13 -> Valor: 3
Nodo: T14 -> Valor: 3
Nodo: T15 -> Valor: 4
Nodo: T0 -> Valor: 2
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 2
Nodo: T2 -> Valor: 6
Nodo: T3 -> Valor: 2
Nodo: T4 -> Valor: 6
Nodo: T5 -> Valor: 2
Nodo: T6 -> Valor: 6
Nodo: T7 -> Valor: 3
Nodo: T8 -> Valor: 3
Nodo: T9 -> Valor: 4
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T10,RV
MOVE: RV,T11
MOVE: T13,RV
MOVE: RV,T14
MOVE: T13,RV
MOVE: RV,T14
MOVE: T10,RV
MOVE: RV,T11
MOVE: T7,RV
MOVE: RV,T8
MOVE: T6,T0
MOVE: T2,T3
MOVE: T2,T3
MOVE: T4,T5
MOVE: T4,T5
MOVE: T6,T0
MOVE: T7,RV
MOVE: RV,T8
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T1 ,T12 ,T15 ,T9 ,}

 esto es: freezeWorklist
 {T0 ,T10 ,T11 ,T13 ,T14 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T10 -> vecinos: FPvecinos: SPvecinos: T4
Nodo: T11 -> vecinos: FPvecinos: SPvecinos: T4
Nodo: T12 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T4
Nodo: T13 -> vecinos: FPvecinos: SPvecinos: T2
Nodo: T14 -> vecinos: FPvecinos: SPvecinos: T2
Nodo: T15 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T2
Nodo: T0 -> vecinos: FPvecinos: SP
Nodo: T1 -> vecinos: FPvecinos: SP
Nodo: T2 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T13vecinos: T14vecinos: T15
Nodo: T3 -> vecinos: FPvecinos: SP
Nodo: T4 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T10vecinos: T11vecinos: T12
Nodo: T5 -> vecinos: FPvecinos: SP
Nodo: T6 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T7vecinos: T8vecinos: T9
Nodo: T7 -> vecinos: FPvecinos: SPvecinos: T6
Nodo: T8 -> vecinos: FPvecinos: SPvecinos: T6
Nodo: T9 -> vecinos: FPvecinos: RVvecinos: SPvecinos: T6
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: T13,RV
MOVE: RV,T14
MOVE: T2,T3
MOVE: T10,RV
MOVE: RV,T11
MOVE: T4,T5
MOVE: T7,RV
MOVE: RV,T8
MOVE: T6,T0
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist RV
app1
addWorklist RV
app1
addWorklist T2
app1
addWorklist RV
app1
addWorklist RV
app1
addWorklist T4
app1
addWorklist RV
app1
addWorklist RV
app1
addWorklist T6
AssignColorsT6

 esto es: lista adj
 {FP ,RV ,SP ,T7 ,T8 ,T9 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T7
getAlias de: T8
getAlias de: T9
inserto en color: T6
AssignColorsT4

 esto es: lista adj
 {FP ,RV ,SP ,T10 ,T11 ,T12 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T10
getAlias de: T11
getAlias de: T12
inserto en color: T4
AssignColorsT2

 esto es: lista adj
 {FP ,RV ,SP ,T13 ,T14 ,T15 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T13
getAlias de: T14
getAlias de: T15
inserto en color: T2
AssignColorsT9

 esto es: lista adj
 {FP ,RV ,SP ,T6 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T6
inserto en color: T9
AssignColorsT15

 esto es: lista adj
 {FP ,RV ,SP ,T2 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T2
inserto en color: T15
AssignColorsT12

 esto es: lista adj
 {FP ,RV ,SP ,T4 ,}
getAlias de: FP
getAlias de: RV
getAlias de: SP
getAlias de: T4
inserto en color: T12
AssignColorsT1

 esto es: lista adj
 {FP ,SP ,}
getAlias de: FP
getAlias de: SP
inserto en color: T1
getAlias de T0 es T6
getAlias de T10 es RV
getAlias de T11 es RV
getAlias de T13 es RV
getAlias de T14 es RV
getAlias de T3 es T2
getAlias de T5 es T4
getAlias de T7 es RV
getAlias de T8 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 0
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 2
Nodo: T13 -> Color: 0
Nodo: T14 -> Color: 0
Nodo: T15 -> Color: 2
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 1
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 0
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 2
Nodo: T13 -> Color: 0
Nodo: T14 -> Color: 0
Nodo: T15 -> Color: 2
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 1
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es T6
getAlias de T10 es RV
getAlias de T11 es RV
getAlias de T13 es RV
getAlias de T14 es RV
getAlias de T3 es T2
getAlias de T5 es T4
getAlias de T7 es RV
getAlias de T8 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 0
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 2
Nodo: T13 -> Color: 0
Nodo: T14 -> Color: 0
Nodo: T15 -> Color: 2
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 1
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 1
Nodo: T3 -> Color: 1
Nodo: T4 -> Color: 1
Nodo: T5 -> Color: 1
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 0
Nodo: T8 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 36
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: RV -> %rax
TEMP -> REG: T13 -> %rax
TEMP -> REG: T14 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T2 -> %rbx
TEMP -> REG: RV -> %rax
TEMP -> REG: T10 -> %rax
TEMP -> REG: T11 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T5 -> %rbx
TEMP -> REG: T4 -> %rbx
TEMP -> REG: RV -> %rax
TEMP -> REG: T7 -> %rax
TEMP -> REG: T8 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T0 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T0 -> %rbx
TEMP -> REG: T8 -> %rax
TEMP -> REG: T9 -> %r10
TEMP -> REG: T9 -> %r10
TEMP -> REG: T7 -> %rax
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T5 -> %rbx
TEMP -> REG: T11 -> %rax
TEMP -> REG: T12 -> %r10
TEMP -> REG: T12 -> %r10
TEMP -> REG: T10 -> %rax
TEMP -> REG: T4 -> %rbx
TEMP -> REG: T4 -> %rbx
TEMP -> REG: T3 -> %rbx
TEMP -> REG: T14 -> %rax
TEMP -> REG: T15 -> %r10
TEMP -> REG: T15 -> %r10
TEMP -> REG: T13 -> %rax
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T2 -> %rbx
TEMP -> REG: T1 -> %rax
TEMP -> REG: RV -> %rax
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L1
L1: 
movq %rdi, -8(%rbp)
movq $0, %rbx 
movq $-0, %rax 
movq $8, %r10 
mul %r10 
addq %rax, %rbx
movq (%rbx), %rbx
movq $-0, %rax 
movq $8, %r10 
mul %r10 
addq %rax, %rbx
movq (%rbx), %rbx
movq $-0, %rax 
movq $8, %r10 
mul %r10 
addq %rax, %rbx
movq (%rbx), %rax
movq $0, %rax 
jmp L0 
L0: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
