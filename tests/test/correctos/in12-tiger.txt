LABEL FOR _tigermain: _tigermain
ADDED _tigermain
Todos los frags:
_tigermain:
LABEL L4
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 CONST 0)
LABEL L0
MOVE(
 TEMP T1,
 TEMP T0)
LABEL L2
MOVE(
 TEMP T0,
 TEMP T1)
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L3)
LABEL L1
MOVE(
 TEMP T1,
 CONST 0)
JUMP( NAME L2)
LABEL L3
----------------
ADDING (_tigermain,)
Leng frame: 2
_tigermain: 
L4: 
movq ARG1, -8(FP)
movq $0, T0 
L0: 
movq T0, T1
L2: 
movq T1, T0
movq $0, RV 
jmp L3 
L1: 
movq $0, T1 
jmp L2 
L3: 
16::f433
1
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T1
poniendo noddes: SP, T1
poniendo noddes: FP, RV
poniendo noddes: SP, RV

 esto es: initial
 {T0 ,T1 ,}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: T0 -> Valor: 2
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 2
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T0,T1
MOVE: T1,T0
MOVE: T0,T1
MOVE: T1,T0
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {T0 ,T1 ,}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T0 -> vecinos: FPvecinos: SP
Nodo: T1 -> vecinos: FPvecinos: SP
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: T0,T1
MOVE: T1,T0
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist T0
addWorklist T0
AssignColorsT0

 esto es: lista adj
 {FP ,SP ,}
getAlias de: FP
getAlias de: SP
inserto en color: T0
getAlias de T1 es T0

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T1 es T0

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 0
Nodo: T1 -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 19
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T1 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T0 -> %rax
TEMP -> REG: T1 -> %rax
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T0 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T1 -> %rax
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L4
L4: 
movq %rdi, -8(%rbp)
movq $0, %rax 
L0: 
L2: 
movq $0, %rax 
jmp L3 
L1: 
movq $0, %rax 
jmp L2 
L3: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
