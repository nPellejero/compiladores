LABEL FOR _tigermain: _tigermain
ActualArg: 1
ActualLocal: 0
RET: 24
LABEL FOR f: L0
ActualArg: 1
RET: 16
ActualArg: 0
RET: 8
LABEL FOR f: L1
ADDED L1
ADDED L0
ADDED _tigermain
Todos los frags:
L1:
LABEL L3
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 TEMP T0,
 TEMP ARG2)
MOVE(
 TEMP RV,
 BINOP(PLUS,
  BINOP(PLUS,
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        TEMP FP,
        CONST ~8)),
      CONST ~16)),
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        TEMP FP,
        CONST ~8)),
      CONST ~8))),
   TEMP T0),
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        TEMP FP,
        CONST ~8)),
      CONST ~8)),
    CONST ~24))))
JUMP( NAME L2)
LABEL L2
L0:
LABEL L5
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~16)),
 TEMP ARG2)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG3)
MOVE(
 TEMP RV,
 MEM(
  BINOP(PLUS,
   MEM(
    BINOP(PLUS,
     TEMP FP,
     CONST ~8)),
   CONST ~24)))
JUMP( NAME L4)
LABEL L4
_tigermain:
LABEL L7
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~8)),
 TEMP ARG1)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP FP,
   CONST ~24)),
 CONST 8)
MOVE(
 TEMP RV,
 CONST 0)
JUMP( NAME L6)
LABEL L6
----------------
ADDING (L1,)
ADDING (L0,)
ADDING (_tigermain,)
Leng frame: 6
L1: 
L3: 
movq ARG1, -8(FP)
movq ARG2, T0
movq -8(FP), T5
movq -16(T5), T4
movq T4, T3
movq -8(FP), T7
movq -8(T7), T6
addq T6, T3
movq T3, T2
addq T0, T2
movq T2, T1
movq -8(FP), T10
movq -8(T10), T9
movq -24(T9), T8
addq T8, T1
movq T1, RV 
jmp L2 
L2: 
L0: 
L5: 
movq ARG1, -8(FP)
movq ARG2, -16(FP)
movq ARG3, -8(FP)
movq -8(FP), T11
movq -24(T11), RV
jmp L4 
L4: 
_tigermain: 
L7: 
movq ARG1, -8(FP)
movq $8, T12 
movq T12, -24(FP)
movq $0, RV 
jmp L6 
L6: 
10::f433
5
poniendo noddes: SP, FP
poniendo noddes: FP, T12
poniendo noddes: SP, T12
poniendo noddes: FP, RV
poniendo noddes: SP, RV

 esto es: initial
 {T12 ,}
nodeMoves: T12 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T12 -> 
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: T12 -> Valor: 2
Nodo: RV -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T12 ,}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
Nodo: T12 -> vecinos: FPvecinos: SP
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
AssignColorsT12

 esto es: lista adj
 {FP ,SP ,}
getAlias de: FP
getAlias de: SP
inserto en color: T12

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (true): 0
3::f433
4
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 13
11::f433
3
poniendo noddes: ARG2, FP
poniendo noddes: ARG3, FP
poniendo noddes: SP, FP
poniendo noddes: FP, T11
poniendo noddes: SP, T11
poniendo noddes: FP, RV
poniendo noddes: SP, RV

 esto es: initial
 {T11 ,}
nodeMoves: T11 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T11 -> 
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: ARG2 -> Valor: 1000
Nodo: ARG3 -> Valor: 1000
Nodo: T11 -> Valor: 2
Nodo: RV -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T11 ,}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: T11 -> vecinos: FPvecinos: SP
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
AssignColorsT11

 esto es: lista adj
 {FP ,SP ,}
getAlias de: FP
getAlias de: SP
inserto en color: T11

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 17
3::f433
2
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: R10 -> Color: 2
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 31
22::f433
1
poniendo noddes: ARG2, FP
poniendo noddes: SP, FP
poniendo noddes: FP, T0
poniendo noddes: SP, T0
poniendo noddes: FP, T5
poniendo noddes: SP, T5
poniendo noddes: T0, T5
poniendo noddes: FP, T4
poniendo noddes: SP, T4
poniendo noddes: T0, T4
poniendo noddes: FP, T3
poniendo noddes: SP, T3
poniendo noddes: T0, T3
poniendo noddes: FP, T7
poniendo noddes: SP, T7
poniendo noddes: T0, T7
poniendo noddes: T3, T7
poniendo noddes: FP, T6
poniendo noddes: SP, T6
poniendo noddes: T0, T6
poniendo noddes: T3, T6
poniendo noddes: FP, T2
poniendo noddes: SP, T2
poniendo noddes: T0, T2
poniendo noddes: FP, T1
poniendo noddes: SP, T1
poniendo noddes: FP, T10
poniendo noddes: SP, T10
poniendo noddes: T1, T10
poniendo noddes: FP, T9
poniendo noddes: SP, T9
poniendo noddes: T1, T9
poniendo noddes: FP, T8
poniendo noddes: SP, T8
poniendo noddes: T1, T8
poniendo noddes: FP, RV
poniendo noddes: SP, RV

 esto es: initial
 {T0 ,T1 ,T10 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,T9 ,}
nodeMoves: T10 -> Move que no esta realacionado con otro temporario
nodeMoves: T5 -> Move que no esta realacionado con otro temporario
nodeMoves: T6 -> Move que no esta realacionado con otro temporario
nodeMoves: T7 -> Move que no esta realacionado con otro temporario
nodeMoves: T8 -> Move que no esta realacionado con otro temporario
nodeMoves: T9 -> Move que no esta realacionado con otro temporario

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> 
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> 
Nodo: T1 -> 
Nodo: T2 -> 
Nodo: T3 -> 
Nodo: T4 -> 
Nodo: T5 -> 
Nodo: T6 -> 
Nodo: T7 -> 
Nodo: T8 -> 
Nodo: R10 -> Color: 2
Nodo: T9 -> 
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: ARG2 -> Valor: 1000
Nodo: T10 -> Valor: 3
Nodo: T0 -> Valor: 8
Nodo: RV -> Valor: 1000
Nodo: T1 -> Valor: 5
Nodo: T2 -> Valor: 3
Nodo: T3 -> Valor: 5
Nodo: T4 -> Valor: 3
Nodo: T5 -> Valor: 3
Nodo: T6 -> Valor: 4
Nodo: T7 -> Valor: 4
Nodo: T8 -> Valor: 3
Nodo: T9 -> Valor: 3
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: T0,ARG2
MOVE: RV,T1
MOVE: T0,ARG2
MOVE: RV,T1
MOVE: T1,T2
MOVE: T1,T2
MOVE: T2,T3
MOVE: T2,T3
MOVE: T3,T4
MOVE: T3,T4
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {T10 ,T5 ,T6 ,T7 ,T8 ,T9 ,}

 esto es: freezeWorklist
 {T0 ,T1 ,T2 ,T3 ,T4 ,}

 esto es: adjList
 {Nodo: T10 -> vecinos: FPvecinos: SPvecinos: T1
Nodo: T0 -> vecinos: FPvecinos: SPvecinos: T2vecinos: T3vecinos: T4vecinos: T5vecinos: T6vecinos: T7
Nodo: T1 -> vecinos: FPvecinos: SPvecinos: T10vecinos: T8vecinos: T9
Nodo: T2 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T3 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T6vecinos: T7
Nodo: T4 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T5 -> vecinos: FPvecinos: SPvecinos: T0
Nodo: T6 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T3
Nodo: T7 -> vecinos: FPvecinos: SPvecinos: T0vecinos: T3
Nodo: T8 -> vecinos: FPvecinos: SPvecinos: T1
Nodo: T9 -> vecinos: FPvecinos: SPvecinos: T1
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
MOVE: RV,T1
MOVE: T1,T2
MOVE: T2,T3
MOVE: T3,T4
MOVE: T0,ARG2
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
app1
addWorklist RV
poniendo noddes: T0, RV
app1
addWorklist RV
app1
addWorklist RV
app1
addWorklist RV
poniendo noddes: RV, ARG2
poniendo noddes: SP, ARG2
app1
addWorklist ARG2
AssignColorsT9

 esto es: lista adj
 {FP ,SP ,T1 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T1
inserto en color: T9
AssignColorsT8

 esto es: lista adj
 {FP ,SP ,T1 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T1
inserto en color: T8
AssignColorsT7

 esto es: lista adj
 {FP ,SP ,T0 ,T3 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T3
inserto en color: T7
AssignColorsT6

 esto es: lista adj
 {FP ,SP ,T0 ,T3 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
getAlias de: T3
inserto en color: T6
AssignColorsT5

 esto es: lista adj
 {FP ,SP ,T0 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T0
inserto en color: T5
AssignColorsT10

 esto es: lista adj
 {FP ,SP ,T1 ,}
getAlias de: FP
getAlias de: SP
getAlias de: T1
inserto en color: T10
getAlias de T0 es ARG2
getAlias de T1 es RV
getAlias de T2 es RV
getAlias de T3 es RV
getAlias de T4 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 9
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 0
Nodo: T3 -> Color: 0
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 1
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 35
3::f433
0
poniendo noddes: SP, FP

 esto es: initial
 {}

 esto es: color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 9
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 0
Nodo: T3 -> Color: 0
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 1
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}

 esto es: degree
 {Nodo: FP -> Valor: 1000
Nodo: SP -> Valor: 1000
}

 esto es: moveList
 {MOVE: FP,FP
MOVE: SP,SP
}

 esto es: spillWorklist
 {}

 esto es: simplifyWorklist
 {}

 esto es: freezeWorklist
 {}

 esto es: adjList
 {Nodo: FP -> 
}

 esto es: worklistMoves
 { MOVE: SP,SP
MOVE: FP,FP
}

 esto es: activeMoves
 { }

 esto es: Stack
 {}
addWorklist SP
addWorklist FP
getAlias de T0 es ARG2
getAlias de T1 es RV
getAlias de T2 es RV
getAlias de T3 es RV
getAlias de T4 es RV

 esto es: spilledNodes
 {}

 esto es: Color
 {Nodo: FP -> Color: 14
Nodo: RDX -> Color: 10
Nodo: ARG1 -> Color: 8
Nodo: ARG2 -> Color: 9
Nodo: ARG3 -> Color: 10
Nodo: ARG4 -> Color: 11
Nodo: ARG5 -> Color: 12
Nodo: ARG6 -> Color: 13
Nodo: T10 -> Color: 1
Nodo: T11 -> Color: 0
Nodo: T12 -> Color: 0
Nodo: RAX -> Color: 0
Nodo: RBX -> Color: 1
Nodo: RV -> Color: 0
Nodo: T0 -> Color: 9
Nodo: T1 -> Color: 0
Nodo: T2 -> Color: 0
Nodo: T3 -> Color: 0
Nodo: T4 -> Color: 0
Nodo: T5 -> Color: 0
Nodo: T6 -> Color: 1
Nodo: T7 -> Color: 1
Nodo: T8 -> Color: 1
Nodo: R10 -> Color: 2
Nodo: T9 -> Color: 1
Nodo: R11 -> Color: 3
Nodo: R12 -> Color: 4
Nodo: R13 -> Color: 5
Nodo: SP -> Color: 15
Nodo: R14 -> Color: 6
Nodo: R15 -> Color: 7
}
Acumm (false): 60
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T1 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: T2 -> %rax
TEMP -> REG: T1 -> %rax
TEMP -> REG: T3 -> %rax
TEMP -> REG: T2 -> %rax
TEMP -> REG: T4 -> %rax
TEMP -> REG: T3 -> %rax
TEMP -> REG: ARG2 -> %rsi
TEMP -> REG: T0 -> %rsi
TEMP -> REG: SP -> %rsp
TEMP -> REG: SP -> %rsp
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
Limpiados MOV con igual src y dst
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T5 -> %rax
TEMP -> REG: T5 -> %rax
TEMP -> REG: T4 -> %rax
TEMP -> REG: FP -> %rbp
TEMP -> REG: T7 -> %rbx
TEMP -> REG: T7 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T6 -> %rbx
TEMP -> REG: T3 -> %rax
TEMP -> REG: T0 -> %rsi
TEMP -> REG: T2 -> %rax
TEMP -> REG: FP -> %rbp
TEMP -> REG: T10 -> %rbx
TEMP -> REG: T10 -> %rbx
TEMP -> REG: T9 -> %rbx
TEMP -> REG: T9 -> %rbx
TEMP -> REG: T8 -> %rbx
TEMP -> REG: T8 -> %rbx
TEMP -> REG: T1 -> %rax
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: ARG2 -> %rsi
TEMP -> REG: FP -> %rbp
TEMP -> REG: ARG3 -> %rdx
TEMP -> REG: FP -> %rbp
TEMP -> REG: FP -> %rbp
TEMP -> REG: T11 -> %rax
TEMP -> REG: T11 -> %rax
TEMP -> REG: RV -> %rax
TEMP -> REG: ARG1 -> %rdi
TEMP -> REG: FP -> %rbp
TEMP -> REG: T12 -> %rax
TEMP -> REG: T12 -> %rax
TEMP -> REG: FP -> %rbp
TEMP -> REG: RV -> %rax
.globl L1
.type L1, @function
L1: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L3
L3: 
movq %rdi, -8(%rbp)
movq -8(%rbp), %rax
movq -16(%rax), %rax
movq -8(%rbp), %rbx
movq -8(%rbx), %rbx
addq %rbx, %rax
addq %rsi, %rax
movq -8(%rbp), %rbx
movq -8(%rbx), %rbx
movq -24(%rbx), %rbx
addq %rbx, %rax
jmp L2 
L2: 
leave
ret
.size L1, .-L1
.globl L0
.type L0, @function
L0: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L5
L5: 
movq %rdi, -8(%rbp)
movq %rsi, -16(%rbp)
movq %rdx, -8(%rbp)
movq -8(%rbp), %rax
movq -24(%rax), %rax
jmp L4 
L4: 
leave
ret
.size L0, .-L0
.globl _tigermain
.type _tigermain, @function
_tigermain: 
pushq %rbp
movq %rsp, %rbp
subq $40, %rsp
jmp L7
L7: 
movq %rdi, -8(%rbp)
movq $8, %rax 
movq %rax, -24(%rbp)
movq $0, %rax 
jmp L6 
L6: 
leave
ret
.size _tigermain, .-_tigermain

 bien!
yes!!
